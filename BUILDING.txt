#1 Dependencies
-> Qt 5.1 (core gui widgets sql)

--- UPDATED INSTRUCTIONS AS OF 11/2018 ---
Build instructions on Linux (tested on Ubuntu 18.04)

1) Install qt5 and the required dependencies :
$sudo apt install qt5-default

2) Once you cloned the repo (https://github.com/louvainlinux/KapCompta), you can build it as follows :
Once in the KapCompta directory :
$qmake KapCompta.pro
$make
(This might take a while)

3) Then navigate to KapCompta/KCApp/ : 
$cd KCApp

And execute the program with :
$./KapCompta

4) Note that at some point during this process, you might get an error about a shared library file not being accessible. You need to add a directory to the LD_LIBRARY_PATH variable like this :
$sudo gedit ~/.bashrc

Add the following line at the very end of the file :

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/yourusername/path/to/the/program/folder/KapCompta/KCApp/lib

Then reboot your machine.

5) To run the program in the future, simply type
$./KapCompta
when in the KapCompta/KCApp/ folder.




--- THE FOLLOWINGS ARE OUTDATED ! ---

#2 General
The KapCompta.pro is the qmake master file,
If you want to add extra plugins to your project, add their directories
as subdir of KCPlugin/ and list them in the KCPlugin.pro file.
The KCHousing.pro shows an example to automatically install the plugin
and link it to the shared lib.

#3 Platform specific notes
-- Mac OSX
In order to build the bundle, you need to add a deploy step which executes
the 'osx_shared_lib.sh' script. Be sure it has the execution flag set (chmod +x).
Execute it from the Build directory (or update it and commit it :D)

-- Windows
You will probably have to add the shared lib to the $PATH but I haven't tested yet

-- Linux
You will probably have to add the shared lib to the $LD_LIBRARY_PATH ; haven't tested either

#4 Plugins
Plugins will be auto-detected/loaded if they are in the plugins subdirectory of the
KCApp build dir.

#5 Translations
Compiled versions of the translation files (obtained with `lrelease somefile.ts`) must
 be placed in the plugins dir as well in order to be loaded by the app.
Running lupdate from times to time shouldn't be a luxury ...
